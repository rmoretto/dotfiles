(defvar show-notification false)

(defpoll notifications 
  :interval "1s"
  :initial "[]"
  `notifdctl list | jq .data`)

(defwidget noti_box [entry]
  (box :class "box" :space-evenly false
    (image :path "${entry.icon_path}" 
           :image-width 42
           :class "img")
    (box :orientation "vertical" 
         :height 64
         :hexpand true
         :space-evenly false
         :class "text-wrapper"
      (box :space-evenly false
        (label :wrap true 
               :hexpand true
               :limit-width 48 
               :halign "start" 
               :markup "${entry.summary}"
               :class "title")
        (button 
          :height 12
          :width 12
          :class "delete-btn"
          :onclick `notifdctl pop ${entry.id}` 
          "ï‡¸")
      )
      (label :wrap true 
             :limit-width 128
             :halign "start" 
             :vexpand false
             :text "${entry.body}"
             :class "msg")
    )
  )
)

(defwidget nothist_top []
  (box :space-evenly false :class "top"
    (label :hexpand true :text "Notification Center" :class "top-title")
    (button 
      :onclick `notifdctl clear`
      :class "delete-btn"
      :style "font-weight: bold"
      "Clear"
    )
  )
)

(defwidget nothist_layout []
  (box :space-evenly false :orientation "vertical" :class "layout"
    (nothist_top)
    (scroll :vexpand true
      (box :orientation "vertical" :class "wrapper" :vexpand false :space-evenly false
        (for entry in notifications 
          (noti_box :entry entry)
        )
      )
    )
  )
)

(defwindow notification_history
  :stacking "fg"
  :windowtype "dialog"
  :wm-ignore true
  :geometry (geometry
              :anchor "top right" 
              :x "-12"
              :y "3%"
              :width "300px"
              :height "94%")
  
  (nothist_layout)
)
